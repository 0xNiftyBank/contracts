/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DebtToken, DebtTokenInterface } from "../DebtToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_borrower",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_niftyBank",
        type: "address",
      },
    ],
    name: "setNiftyBank",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d9138038062001d91833981016040819052620000349162000251565b8151829082906200004d906000906020850190620000de565b50805162000063906001906020840190620000de565b505050620000806200007a6200008860201b60201c565b6200008c565b5050620002f8565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ec90620002bb565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ac57600080fd5b81516001600160401b0380821115620001c957620001c962000184565b604051601f8301601f19908116603f01168101908282118183101715620001f457620001f462000184565b816040528381526020925086838588010111156200021157600080fd5b600091505b8382101562000235578582018301518183018401529082019062000216565b83821115620002475760008385830101525b9695505050505050565b600080604083850312156200026557600080fd5b82516001600160401b03808211156200027d57600080fd5b6200028b868387016200019a565b93506020850151915080821115620002a257600080fd5b50620002b1858286016200019a565b9150509250929050565b600181811c90821680620002d057607f821691505b60208210811415620002f257634e487b7160e01b600052602260045260246000fd5b50919050565b611a8980620003086000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806370a08231116100cd578063a22cb46511610081578063c87b56dd11610066578063c87b56dd146102ad578063e985e9c5146102c0578063f2fde38b146102fc57600080fd5b8063a22cb46514610287578063b88d4fde1461029a57600080fd5b80638da5cb5b116100b25780638da5cb5b1461025b57806395d89b411461026c5780639f729a711461027457600080fd5b806370a0823114610240578063715018a61461025357600080fd5b806323b872dd1161012457806342966c681161010957806342966c68146101f95780636352211e1461020c5780636a6278421461021f57600080fd5b806323b872dd146101d357806342842e0e146101e657600080fd5b806301ffc9a71461015657806306fdde031461017e578063081812fc14610193578063095ea7b3146101be575b600080fd5b61016961016436600461163d565b61030f565b60405190151581526020015b60405180910390f35b6101866103ac565b60405161017591906116b2565b6101a66101a13660046116c5565b61043e565b6040516001600160a01b039091168152602001610175565b6101d16101cc3660046116fa565b6104d8565b005b6101d16101e1366004611724565b61060a565b6101d16101f4366004611724565b610691565b6101d16102073660046116c5565b6106ac565b6101a661021a3660046116c5565b610733565b61023261022d366004611760565b6107be565b604051908152602001610175565b61023261024e366004611760565b610852565b6101d16108ec565b6006546001600160a01b03166101a6565b610186610952565b6101d1610282366004611760565b610961565b6101d161029536600461177b565b6109dd565b6101d16102a83660046117cd565b6109ec565b6101866102bb3660046116c5565b610a7a565b6101696102ce3660046118a9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101d161030a366004611760565b610b70565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061037257506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806103a657507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600080546103bb906118dc565b80601f01602080910402602001604051908101604052809291908181526020018280546103e7906118dc565b80156104345780601f1061040957610100808354040283529160200191610434565b820191906000526020600020905b81548152906001019060200180831161041757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104bc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104e382610733565b9050806001600160a01b0316836001600160a01b0316141561056d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016104b3565b336001600160a01b0382161480610589575061058981336102ce565b6105fb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104b3565b6106058383610c4f565b505050565b6106143382610cbd565b6106865760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104b3565b610605838383610db4565b610605838383604051806020016040528060008152506109ec565b6008546001600160a01b0316158015906106d057506008546001600160a01b031633145b6107275760405162461bcd60e51b815260206004820152602260248201527f53686f756c64206f6e6c792062652063616c6c6564206279206e6966747942616044820152616e6b60f01b60648201526084016104b3565b61073081610f81565b50565b6000818152600260205260408120546001600160a01b0316806103a65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016104b3565b6008546000906001600160a01b0316158015906107e557506008546001600160a01b031633145b61083c5760405162461bcd60e51b815260206004820152602260248201527f53686f756c64206f6e6c792062652063616c6c6564206279206e6966747942616044820152616e6b60f01b60648201526084016104b3565b600061084661101c565b90506103a68382611033565b60006001600160a01b0382166108d05760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016104b3565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b031633146109465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b610950600061104d565b565b6060600180546103bb906118dc565b6006546001600160a01b031633146109bb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6109e833838361109f565b5050565b6109f63383610cbd565b610a685760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104b3565b610a748484848461116e565b50505050565b6000818152600260205260409020546060906001600160a01b0316610b075760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104b3565b6000610b1e60408051602081019091526000815290565b90506000815111610b3e5760405180602001604052806000815250610b69565b80610b48846111ec565b604051602001610b59929190611917565b6040516020818303038152906040525b9392505050565b6006546001600160a01b03163314610bca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b6001600160a01b038116610c465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104b3565b6107308161104d565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c8482610733565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610d365760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104b3565b6000610d4183610733565b9050806001600160a01b0316846001600160a01b03161480610d8857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610dac5750836001600160a01b0316610da18461043e565b6001600160a01b0316145b949350505050565b826001600160a01b0316610dc782610733565b6001600160a01b031614610e435760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104b3565b6001600160a01b038216610ebe5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104b3565b610ec9600082610c4f565b6001600160a01b0383166000908152600360205260408120805460019290610ef290849061195c565b90915550506001600160a01b0382166000908152600360205260408120805460019290610f20908490611973565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610f8c82610733565b9050610f99600083610c4f565b6001600160a01b0381166000908152600360205260408120805460019290610fc290849061195c565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600061102c600780546001019055565b5060075490565b6109e882826040518060200160405280600081525061131e565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156111015760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104b3565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611179848484610db4565b6111858484848461139c565b610a745760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104b3565b60608161122c57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561125657806112408161198b565b915061124f9050600a836119bc565b9150611230565b60008167ffffffffffffffff811115611271576112716117b7565b6040519080825280601f01601f19166020018201604052801561129b576020820181803683370190505b5090505b8415610dac576112b060018361195c565b91506112bd600a866119d0565b6112c8906030611973565b60f81b8183815181106112dd576112dd6119e4565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611317600a866119bc565b945061129f565b61132883836114e5565b611335600084848461139c565b6106055760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104b3565b60006001600160a01b0384163b156114da57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113e09033908990889088906004016119fa565b6020604051808303816000875af192505050801561141b575060408051601f3d908101601f1916820190925261141891810190611a36565b60015b6114c0573d808015611449576040519150601f19603f3d011682016040523d82523d6000602084013e61144e565b606091505b5080516114b85760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104b3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610dac565b506001949350505050565b6001600160a01b03821661153b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104b3565b6000818152600260205260409020546001600160a01b0316156115a05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104b3565b6001600160a01b03821660009081526003602052604081208054600192906115c9908490611973565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461073057600080fd5b60006020828403121561164f57600080fd5b8135610b6981611627565b60005b8381101561167557818101518382015260200161165d565b83811115610a745750506000910152565b6000815180845261169e81602086016020860161165a565b601f01601f19169290920160200192915050565b602081526000610b696020830184611686565b6000602082840312156116d757600080fd5b5035919050565b80356001600160a01b03811681146116f557600080fd5b919050565b6000806040838503121561170d57600080fd5b611716836116de565b946020939093013593505050565b60008060006060848603121561173957600080fd5b611742846116de565b9250611750602085016116de565b9150604084013590509250925092565b60006020828403121561177257600080fd5b610b69826116de565b6000806040838503121561178e57600080fd5b611797836116de565b9150602083013580151581146117ac57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156117e357600080fd5b6117ec856116de565b93506117fa602086016116de565b925060408501359150606085013567ffffffffffffffff8082111561181e57600080fd5b818701915087601f83011261183257600080fd5b813581811115611844576118446117b7565b604051601f8201601f19908116603f0116810190838211818310171561186c5761186c6117b7565b816040528281528a602084870101111561188557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156118bc57600080fd5b6118c5836116de565b91506118d3602084016116de565b90509250929050565b600181811c908216806118f057607f821691505b6020821081141561191157634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161192981846020880161165a565b83519083019061193d81836020880161165a565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561196e5761196e611946565b500390565b6000821982111561198657611986611946565b500190565b600060001982141561199f5761199f611946565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826119cb576119cb6119a6565b500490565b6000826119df576119df6119a6565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b03808716835280861660208401525083604083015260806060830152611a2c6080830184611686565b9695505050505050565b600060208284031215611a4857600080fd5b8151610b698161162756fea26469706673582212206d8206f19ce565d740b016b9936d3155c0b55540d64b6a2bba1d24911989e86d64736f6c634300080c0033";

type DebtTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebtTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebtToken__factory extends ContractFactory {
  constructor(...args: DebtTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DebtToken> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<DebtToken>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): DebtToken {
    return super.attach(address) as DebtToken;
  }
  connect(signer: Signer): DebtToken__factory {
    return super.connect(signer) as DebtToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebtTokenInterface {
    return new utils.Interface(_abi) as DebtTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DebtToken {
    return new Contract(address, _abi, signerOrProvider) as DebtToken;
  }
}
